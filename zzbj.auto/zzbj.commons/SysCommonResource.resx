<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DataIsNull" xml:space="preserve">
    <value>您所输入的数据值不能为空！</value>
  </data>
  <data name="DataIsRelevance" xml:space="preserve">
    <value>对不起，数据不能删除，因为存在关联数据！</value>
  </data>
  <data name="DeleteComfimMsg" xml:space="preserve">
    <value>信息删除后无法恢复，确认删除吗？</value>
  </data>
  <data name="DeleteErrorMsg" xml:space="preserve">
    <value>对不起，数据删除失败，失败原因请查看日志记录或联系管理员。</value>
  </data>
  <data name="DeleteSuccesMsg" xml:space="preserve">
    <value>恭喜您，数据删除成功！</value>
  </data>
  <data name="EntCollectIsDelNo" xml:space="preserve">
    <value>收藏企业删除失败，请联系管理员！</value>
  </data>
  <data name="EntCollectIsDelOk" xml:space="preserve">
    <value>收藏企业已经成功删除！</value>
  </data>
  <data name="EntCollectIsExist" xml:space="preserve">
    <value>该企业已经添加收藏，请不要重复添加!</value>
  </data>
  <data name="EntCollectIsOK" xml:space="preserve">
    <value>企业收藏添加成功!</value>
  </data>
  <data name="EntCoolectIsNo" xml:space="preserve">
    <value>企业收藏添加失败，请联系管理员!</value>
  </data>
  <data name="InsertDataErrorMsg" xml:space="preserve">
    <value>对不起，数据添加失败！失败原因请查看日志记录或联系管理员。</value>
  </data>
  <data name="InsertDataSuccesMsg" xml:space="preserve">
    <value>恭喜您，数据添加成功！</value>
  </data>
  <data name="LoadDataComplete" xml:space="preserve">
    <value>数据加载完成！</value>
  </data>
  <data name="LoginErrorUserNameOrPassword" xml:space="preserve">
    <value>对不起，请输入正确的用户名或密码！</value>
  </data>
  <data name="LoginOther" xml:space="preserve">
    <value>对不起，请输入正确的验证码！</value>
  </data>
  <data name="ModifyDataErrorMsg" xml:space="preserve">
    <value>对不起，数据修改失败！失败原因请查看日志记录或联系管理员。</value>
  </data>
  <data name="ModifyDataSuccessMsg" xml:space="preserve">
    <value>恭喜您，数据修改成功！</value>
  </data>
  <data name="PassWordErrorMsg" xml:space="preserve">
    <value>对不起，您输入的密码有误！</value>
  </data>
  <data name="SysInitializeMsg" xml:space="preserve">
    <value>系统初始化完成……</value>
  </data>
  <data name="UserNameErrorMsg" xml:space="preserve">
    <value>对不起，您输入的用户名有误！</value>
  </data>
  <data name="DataApplayingMsg" xml:space="preserve">
    <value>数据处于审核中，无法删除！</value>
  </data>
</root>